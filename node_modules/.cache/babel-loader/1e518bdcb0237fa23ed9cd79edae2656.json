{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { createContext, useMemo } from 'react';\nexport var IconSettingsContext =\n/*#__PURE__*/\ncreateContext({});\nexport var IconSettingsProvider = function IconSettingsProvider(_ref) {\n  var children = _ref.children,\n      settings = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var contextValue = useMemo(function () {\n    return settings;\n  }, [settings.classPrefix, settings.globalClasses]);\n  return (\n    /*#__PURE__*/\n    React.createElement(IconSettingsContext.Provider, {\n      value: contextValue\n    }, children)\n  );\n};","map":null,"metadata":{},"sourceType":"module"}