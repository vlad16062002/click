{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { ANDROID } from '../../lib/platform';\n\nvar Tabs = function Tabs(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      style = _ref.style,\n      mode = _ref.mode,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"children\", \"style\", \"mode\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n\n  if (platform === ANDROID && mode === 'segmented') {\n    mode = 'default';\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", _extends({}, restProps, {\n      ref: getRootRef,\n      className: classNames(getClassName('Tabs', platform), \"Tabs--\".concat(mode), className),\n      style: style\n    }),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"Tabs__in\"\n    }, children))\n  );\n};\n\nTabs.defaultProps = {\n  mode: 'default'\n};\nexport default Tabs;","map":null,"metadata":{},"sourceType":"module"}