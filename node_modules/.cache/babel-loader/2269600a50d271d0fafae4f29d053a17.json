{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport { hasReactNode, isPrimitiveReactNode } from '../../lib/utils';\n\nvar RichCell = function RichCell(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"text\", \"caption\", \"before\", \"after\", \"bottom\", \"actions\", \"multiline\", \"className\"]);\n\n  var platform = usePlatform();\n  var isAfterPrimitive = isPrimitiveReactNode(after);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tappable, _extends({}, restProps, {\n      Component: restProps.href ? 'a' : 'div',\n      className: classNames(className, getClassName('RichCell', platform), {\n        'RichCell--mult': multiline\n      })\n    }), before,\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__in\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__top\"\n    }, isAfterPrimitive ?\n    /*#__PURE__*/\n    React.createElement(\"span\", null, after) : after,\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__content\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__children\"\n    }, children), hasReactNode(after) &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__after\"\n    }, after)), hasReactNode(text) &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__text\"\n    }, text), hasReactNode(caption) &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__caption\"\n    }, caption), (hasReactNode(bottom) || hasReactNode(actions)) &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__bottom\"\n    }, bottom, hasReactNode(actions) &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"RichCell__actions\"\n    }, actions)))))\n  );\n};\n\nexport default RichCell;","map":null,"metadata":{},"sourceType":"module"}