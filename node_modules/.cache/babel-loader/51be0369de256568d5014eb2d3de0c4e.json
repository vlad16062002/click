{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'reply_outline_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"reply_outline_20\"><path d=\"M10.208 3.423c.921.074 1.645.845 1.645 1.785v1.765l.1.021a8.254 8.254 0 016.44 8.917.75.75 0 01-1.342.379l-.175-.22a7.576 7.576 0 00-5.023-2.721v2.08a1.791 1.791 0 01-2.897 1.41l-6.52-5.11a1.793 1.793 0 010-2.82l6.52-5.11a1.792 1.792 0 011.105-.382zm-.147 1.494a.292.292 0 00-.18.062l-6.52 5.11a.292.292 0 000 .459l6.52 5.11a.292.292 0 00.472-.23v-2.873a.75.75 0 01.767-.75l.215.005.305.016a9.064 9.064 0 015.162 2.056l.037.032-.004-.027a6.752 6.752 0 00-5.822-5.532.75.75 0 01-.66-.745V5.208a.292.292 0 00-.292-.291z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20ReplyOutline = function Icon20ReplyOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(SvgIcon, assign({}, props, {\n      viewBox: viewBox,\n      id: id,\n      width: !isNaN(props.width) ? +props.width : 20,\n      height: !isNaN(props.height) ? +props.height : 20\n    }))\n  );\n};\n\nIcon20ReplyOutline.mountIcon = mountIcon;\nexport default Icon20ReplyOutline;","map":null,"metadata":{},"sourceType":"module"}