{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { IOS, platform } from './platform';\nvar memoized = {};\nexport function computeBrowserInfo(userAgent) {\n  if (memoized[userAgent]) {\n    return memoized[userAgent];\n  }\n\n  var platformName = platform(userAgent);\n  var platformVersion = null;\n\n  if (platformName === IOS) {\n    platformVersion = parseiOSVersion(userAgent);\n  }\n\n  var browserInfo = {\n    userAgent: userAgent,\n    platform: platformName,\n    platformVersion: platformVersion\n  };\n  memoized[userAgent] = browserInfo;\n  return browserInfo;\n}\nexport function parseiOSVersion(userAgent) {\n  if (!userAgent) {\n    return null;\n  }\n\n  var match = userAgent.match(/(iphone os|cpu os|ios) \\b([0-9]+_[0-9]+(?:_[0-9]+)?)\\b/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var _match$2$replace$spli = match[2].replace(/_/g, '.').split('.'),\n      _match$2$replace$spli2 = _slicedToArray(_match$2$replace$spli, 3),\n      major = _match$2$replace$spli2[0],\n      minor = _match$2$replace$spli2[1],\n      patch = _match$2$replace$spli2[2];\n\n  return {\n    major: parseInt(major) || 0,\n    minor: parseInt(minor) || 0,\n    patch: parseInt(patch) || 0\n  };\n}","map":null,"metadata":{},"sourceType":"module"}